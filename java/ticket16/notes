Feature of Java
---------------
   1) Platform Independent and Portable : The concept of Write-once-run-anywhere (known as the Platform independent) 

	 is one of the important key feature of java language that makes java as the most powerful language.


   2) Object Oriented :  It is a fully Object Oriented language because object is at the outer most level of data 
      
         structure in java. No stand alone methods, constants, and variables are there in java. Everything in java 

         is object even the primitive data types can also be converted into object by using the wrapper class. And It
 
         also follow Inheritance, Encapsulation, Polymorphism, Dynamic Binding.

         
   3) Robust : Java has the strong memory allocation and automatic garbage collection mechanism. It provides the 

        powerful exception handling and type checking mechanism as compare to other programming languages. Compiler 

        checks the program whether there any error and interpreter checks any run time error and makes the system 

        secure from crash.


   4) Distributed : The widely used protocols like HTTP and FTP are developed in java. Internet programmers can call 
 
        functions on these protocols and can get access the files from any remote machine on the internet rather than
       
        writing codes on their local system.  


   5) Performance : Java uses native code usage, and lightweight process called  threads. In the beginning 

        interpretation of bytecode resulted the performance slow but the advance version of JVM uses the adaptive 
 
        and just in time compilation technique that improves the performance. 

OOPs Concept
------------
       Object Oriented Programming or OOP is the technique to create programs based on the real world. Unlike 
  
    procedural programming, here in the OOP programming model programs are organized around objects and data rather

    than actions and logic. Objects represent some concepts or things and like any other objects in the real Objects 
 
    in programming language have certain behavior, properties, type, and identity.

    Class - It is the central point of OOP and that contains data and codes with behavior. In Java everything happens
 
            within class and it describes a set of objects with common behavior. The class definition describes all 

            the properties, behavior, and identity of objects present within that class.     

    Object - Objects are the basic unit of object orientation with behavior, identity. An object is expressed by the 

            variable and methods within the objects. Again these variables and methods are distinguished from each 
    
            other as instant variables, instant methods and class variable and class methods

    Methods - We know that a class can define both attributes and behaviors. Again attributes are defined by 

            variables and behaviors are represented by methods. 

    Inheritance - In object oriented programming classes can inherit some common behavior and state from others. 

            Inheritance in OOP allows to define a general class and later to organize some other classes simply 

            adding some details with the old class definition. 

    Abstraction - The process of abstraction in Java is used to hide certain details and only show the essential 
        
            features of the object. 

    Encapsulation - This is an important programming concept that assists in separating an object's state from its 

           behavior. This helps in hiding an object's data describing its state from any further modification by 

           external component. In Java there are four different terms used for hiding data constructs and these are 

           public, private, protected and package. So any unnecessary data are not required by an object can be 

           hidden by this process. It can also be termed as information hiding that prohibits outsiders in seeing the 

           inside of an object in which abstraction is implemented.  

    Polymorphism - It describes the ability of the object in belonging to different types with specific behavior 

          of each type. So by using this, one object can be treated like another and in this way it can create 

          and define multiple level of interface. Here the programmers need not have to know the exact type of 

          object in advance and this is being implemented at runtime.

JVM ( Java Virtual Machine)
----------------------------
	JVM accepts intermediate language commonly called Java bytecode, which is produced by Java Compiler.

Then JVM executes this bytecode. Main Advantages are the byte code is PORTABLE. That means we have to complie 

the Java source code once and run it anywhere. The program intended to run on JVM should be compiled into standard
 
.class files. For easier distribution of larger programs , multiple class files are grouped to form .jar file.     

       The JVM runtime executes .class or .jar files, emulating the JVM instruction set by interpreting it, or 

using a just-in-time compiler (JIT). JIT compiles parts of the byte code that have similar functionality at the 

same time, and hence reduces the amount of time needed for compilation. Jit enables JVM to acheive greater speed.   
